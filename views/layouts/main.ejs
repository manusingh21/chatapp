<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatify</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    
    <!-- Add emoji-picker-element -->
  <!-- <script src="https://cdn.jsdelivr.net/npm/@joeattardi/emoji-button@4.6.4/dist/index.min.js"></script -->
    
    <script>
        window.SUPABASE_URL = '<%= process.env.SUPABASE_URL %>';
        window.SUPABASE_ANON_KEY = '<%= process.env.SUPABASE_ANON_KEY %>';
        
        // Tailwind config...
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#eff6ff',
                            500: '#3b82f6',
                            600: '#2563eb',
                            700: '#1d4ed8',
                            900: '#1e3a8a'
                        },
                        gray: {
                            50: '#f8fafc',
                            100: '#f1f5f9',
                            200: '#e2e8f0',
                            300: '#cbd5e1',
                            400: '#94a3b8',
                            500: '#64748b',
                            600: '#475569',
                            700: '#334155',
                            800: '#1e293b',
                            900: '#0f172a'
                        }
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-in': 'slideIn 0.3s ease-out',
                        'bounce-gentle': 'bounceGentle 2s ease-in-out infinite'
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50 font-sans antialiased">
    <script src="/js/chat.js"></script>
    <script>
// Helper function for better date formatting
function formatLastSeen(lastSeen) {
  if (!lastSeen) return 'Never';
  
  const now = new Date();
  const lastSeenDate = new Date(lastSeen);
  const diffMs = now - lastSeenDate;
  const diffMins = Math.floor(diffMs / 60000);
  const diffHours = Math.floor(diffMins / 60);
  const diffDays = Math.floor(diffHours / 24);

  if (diffMins < 1) return 'just now';
  if (diffMins < 60) return `${diffMins}m ago`;
  if (diffHours < 24) return `${diffHours}h ago`;
  if (diffDays < 7) return `${diffDays}d ago`;
  return lastSeenDate.toLocaleDateString();
}

// Update last seen timestamps every minute
setInterval(() => {
  document.querySelectorAll('.status-text').forEach(element => {
    if (element.textContent.includes('Last seen') && element.dataset.lastSeen) {
      element.textContent = `Last seen ${formatLastSeen(element.dataset.lastSeen)}`;
    }
  });
}, 60000); // Update every minute
</script>
</body>
</html>